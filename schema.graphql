enum BadgeStatus {
  InReview
  Approved
  Rejected
  Revoked
}

type BadgeType @entity {
  id: ID! # BadgeType id
  metadataURL: String!
  controllerName: String!
  mintCost: BigInt!
  validFor: BigInt!
  paused: Boolean!
  creator: User!

  klerosBadge: KlerosBadgeType @derivedFrom(field: "badgeType")
  mintedBadges: [Badge!]! @derivedFrom(field: "badgeType")
  badgesMintedAmount: BigInt!
}

type KlerosBadgeType @entity {
  id: ID! # BadgeType id
  badgeType: BadgeType!
  klerosMetadataURL: String!
  klerosTCRList: Bytes!
  submissionBaseDeposit: BigInt!
  # badgesMintedAmount: BigInt!
  # validFor: BigInt!
  challengePeriodDuration: BigInt!
}

type KlerosChallenge @entity {
  id: ID!
  tcr: String!
  arbitrator: String!
  rules: Boolean!
  evidences: [String!]!
}

type Badge @entity {
  id: ID!
  externalId: Bytes
  badgeType: BadgeType!
  evidenceMetadataUrl: String
  isChallenged: Boolean!
  status: BadgeStatus!
  receiver: User! # The receiver of the badge
  requestedBy: Bytes! # The address who initiated the request.
  reviewDueDate: BigInt! # The timestamp when the review period ends. if zero, it does not have review period
  # challengeEvidences: String[!]
}

type User @entity {
  id: ID!
  badges: [Badge!] @derivedFrom(field: "receiver")
  mintedBadgesAmount: BigInt!
  # creator
  isCreator: Boolean!
  isVerified: Boolean!
  createdBadgeTypes: [BadgeType!] @derivedFrom(field: "creator")
  creatorMetadata: String
  createdBadgesTypesAmount: BigInt!
}
